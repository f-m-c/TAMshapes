<Shape id="SeqDCreateInstance_V001" displayName="Create Instance" icon="icons/createInstance.png" system="true">
    <Properties>
        <PropertyGroup name="Properties">
            <Property name="textFont" displayName="Font" type="Font"><E>$$defaultTextFont</E></Property>
            <Property name="textColor" displayName="Text Color" type="Color"><E>$$defaultTextColor</E></Property>
            <Property name="textAlignment" displayName="Text Alignment" type="Alignment">1,1</Property>
            <Property name="startHandle"  displayName="Start" p:connectTo="*" 
              type="Handle">5,0</Property>
            <Property name="endHandle"  displayName="End" p:connectTo="*" 
              type="Handle"
              >100,0</Property>            
            <Property name="messageStrokeColor" displayName="Message Line Color" type="Color"><E>$$defaultStrokeColor</E></Property>
            <Property name="callLabelHandle"  displayName="Start" 
                type="Handle"
                p:minY="$endHandle.y - 10" p:maxY="$endHandle.y + 10" 
                p:lockX="true" p:expressionX="($endHandle.x + $startHandle.x) / 2"
                >50,-5</Property>
            <Property displayName="Call Label" name="callLabel" 
                p:editInfo="({targetName: 'text', font: $textFont, align: $textAlignment, multi: true})" type="PlainText">&lt;&lt;create&gt;&gt;</Property>
            <Property name="activationSize"  displayName="Activation Size" type="Dimension">10,150</Property>
        </PropertyGroup>
    </Properties>
    <Behaviors>
        <For ref="callMessage">
            <StrokeColor>$messageStrokeColor</StrokeColor>
            <D>[M($startHandle.x + Math.sign($endHandle.x-$startHandle.x) * $activationSize.w / 2, $endHandle.y), L($endHandle.x, $endHandle.y)]</D>
        </For>
        <For ref="callMessageGrip">
            <D>[M($startHandle.x + Math.sign($endHandle.x-$startHandle.x) * $activationSize.w / 2, $endHandle.y), L($endHandle.x, $endHandle.y)]</D>
        </For>
        <For ref="callText">
            <DomContent>F.buildTextWrapDomContent(F._target, $callLabel.value, 300, $textAlignment)</DomContent>
            <Font>$textFont</Font>
            <Color>$textColor</Color>
            <Transform>[translate(parseFloat($callLabelHandle.x) - $textAlignment.h * 150, $callLabelHandle.y)]</Transform>
        </For>
        <For ref="arrowCallPath">
            <StrokeColor>$messageStrokeColor</StrokeColor>
            <Fill>Color.fromString("transparent")</Fill>
            <D><![CDATA[
                var arrowHead = collection.arrowheadCreateSVG("open");
                arrowHead;
            ]]></D>

        </For>

    </Behaviors>
    <Actions>
    </Actions>
    <p:Content xmlns:p="http://www.evolus.vn/Namespace/Pencil"
               xmlns="http://www.w3.org/2000/svg">
        <defs>
            <marker
               id="arrowCall"
               orient="auto"
               refY="0.0"
               refX="0.0"
               style="overflow:visible;">

               <path
                  id="arrowCallPath"
                  transform="rotate(180) translate(1,0)"
                  style="fill-rule:evenodd;stroke-width:0.8;stroke-linejoin:round;stroke:#000000;stroke-opacity:1;fill:#000000;fill-opacity:1"
                  />
            </marker>
        </defs>

        <path id="callMessage"
               style="fill:none;fill-rule:evenodd;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5;"            
               marker-end   = "url(#arrowCall)"
        />
        <path id="callMessageGrip" fill="none" style="stroke: rgba(0, 0, 0, 0); stroke-width: 10px;"/>

        <text id="callText" xml:space="preserve" />
    </p:Content>
</Shape>
